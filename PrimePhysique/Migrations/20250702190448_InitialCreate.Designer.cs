// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrimePhysique.Models;

#nullable disable

namespace PrimePhysique.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250702190448_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PrimePhysique.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Ropa"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Suplementos"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Pre-entrenos"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Proteínas"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Creatinas"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Hoodies"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Pantalones"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Playeras de Compresión"
                        });
                });

            modelBuilder.Entity("PrimePhysique.Models.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Marcas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LogoUrl = "https://example.com/youngla_logo.png",
                            Nombre = "YoungLA"
                        },
                        new
                        {
                            Id = 2,
                            LogoUrl = "https://example.com/gymshark_logo.png",
                            Nombre = "Gymshark"
                        },
                        new
                        {
                            Id = 3,
                            LogoUrl = "https://example.com/evogen_logo.png",
                            Nombre = "Evogen"
                        },
                        new
                        {
                            Id = 4,
                            LogoUrl = "https://example.com/dragonpharma_logo.png",
                            Nombre = "Dragon Pharma"
                        });
                });

            modelBuilder.Entity("PrimePhysique.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Contenido")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Sabor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TallaColorInfo")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("MarcaId");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 8,
                            Descripcion = "Playera de algodón premium con corte oversize, ideal para el gimnasio o uso casual. Comodidad y estilo.",
                            ImagenUrl = "https://placehold.co/600x400/000000/FFFFFF?text=Playera+YoungLA",
                            MarcaId = 1,
                            Nombre = "Playera Oversize 'Signature'",
                            Precio = 35.99m,
                            TallaColorInfo = "[{'talla':'M', 'color':'Negro'}, {'talla':'L', 'color':'Gris'}, {'talla':'XL', 'color':'Blanco'}]"
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 6,
                            Descripcion = "Sudadera con capucha de tejido suave y ajuste atlético. Perfecta para el calentamiento o el día a día.",
                            ImagenUrl = "https://placehold.co/600x400/1a202c/FFFFFF?text=Hoodie+Gymshark",
                            MarcaId = 2,
                            Nombre = "Hoodie 'Legacy'",
                            Precio = 59.99m,
                            TallaColorInfo = "[{'talla':'S', 'color':'Verde'}, {'talla':'M', 'color':'Negro'}, {'talla':'L', 'color':'Azul'}]"
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 3,
                            Contenido = "20 servicios",
                            Descripcion = "Fórmula de pre-entreno sin estimulantes diseñada para maximizar el bombeo muscular y la hidratación.",
                            ImagenUrl = "https://placehold.co/600x400/2f855a/FFFFFF?text=Pre-entreno+Evogen",
                            MarcaId = 3,
                            Nombre = "Pre-entreno EVP-AQ",
                            Precio = 45.00m,
                            Sabor = "Ponche de Frutas"
                        },
                        new
                        {
                            Id = 4,
                            CategoriaId = 4,
                            Contenido = "2 Lbs",
                            Descripcion = "Aislado de proteína de suero de leche de rápida absorción, ideal para la recuperación post-entrenamiento.",
                            ImagenUrl = "https://placehold.co/600x400/805ad5/FFFFFF?text=Proteina+DragonPharma",
                            MarcaId = 4,
                            Nombre = "Proteína IsoPhorm",
                            Precio = 70.00m,
                            Sabor = "Chocolate"
                        });
                });

            modelBuilder.Entity("PrimePhysique.Models.Producto", b =>
                {
                    b.HasOne("PrimePhysique.Models.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrimePhysique.Models.Marca", "Marca")
                        .WithMany("Productos")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("PrimePhysique.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("PrimePhysique.Models.Marca", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
